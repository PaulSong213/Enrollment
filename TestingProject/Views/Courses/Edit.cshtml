<div class="modal fade" id="editCourse" tabindex="-1" aria-labelledby="editCourse" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="edit-title" id="modalLabel">Edit Course</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        
        @model EnrollmentSystem.Models.CoursesModel

         @using(Html.BeginForm("Edit", "Courses"))
        {
            @Html.AntiForgeryToken()
                <input type="hidden" name="Id" value="1">
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            
                    <div class="form-group my-3">
                        @Html.LabelFor(model => model.Acronym, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Acronym, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Acronym, "", new { @class = "text-danger" })
                        </div>
                    </div>
            
                    <div class="form-group my-3">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
            
                    <div class="form-group my-3">
                        @Html.LabelFor(model => model.Slots, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Slots, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Slots, "", new { @class = "text-danger" })
                        </div>
                    </div>
                   
                </div>
     
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="submit" class="btn btn-success" >Edit Course</button>
                    
      </div>
    }
    </div>
  </div>
</div>

<script>
    var exampleModal = document.getElementById('editCourse')
    exampleModal.addEventListener('show.bs.modal', function (event) {
      setTimeout(()=>{
          // Button that triggered the modal
          var button = event.relatedTarget
          // Extract info from data-bs-* attributes
          var id = button.getAttribute('data-bs-id')
          var Name = button.getAttribute('data-bs-Name')
          var Acronym = button.getAttribute('data-bs-Acronym')
          var Slots = button.getAttribute('data-bs-Slots')
          // If necessary, you could initiate an AJAX request here
          // and then do the updating in a callback.
          //
          // Update the modal's content.
          var modalBodyInput = exampleModal.querySelector('.modal-body input')
          $('input[name="Id"]').attr('value',   id);
          $('input[name="Name"]').attr('value',   Name);
          $('input[name="Acronym"]').attr('value',   Acronym);
          $('input[name="Slots"]').attr('value',   Slots);
          console.log(Slots);
      }, 100);
      
    })
        
</script>

