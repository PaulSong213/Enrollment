@model EnrollmentSystem.Models.SignUpModel
<link href="~/Content/style.css" rel="stylesheet" />
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=PT+Serif&display=swap" rel="stylesheet">

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=PT+Serif&family=Poppins:wght@300&display=swap" rel="stylesheet">

@{
    ViewBag.Title = "Sign Up";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="">
    <div class="logo">
        <img src="~/Content/img/Cavite_State_University.png">
    </div>
    <p>Cavite State University - Bacoor Campus <br /> Enrollment System</p>
    <h1>Sign Up</h1>
    <p><b>Create new account</b></p>
    <hr />
</div>

@using (Html.BeginForm("SignUp", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @required = "Yes", @onkeyup = "check()" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="confirm_password" class="control-label col-md-5">Confirm Password</label>
        <div class="col-md-10">
            <input type="password" name="confirm_password" onkeyup='check();' id="confirm_password" class="form-control" required="Yes" />
            <span id='message'></span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @required = "Yes" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @required = "Yes" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            <select name="Gender" class="form-select form-control">
                <option value="1">Male</option>
                <option value="2">Female</option>
                <option value="0">Prefer not to say</option>
            </select>
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @required = "Yes" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-5" for="birthDate">
            Birth Date
        </label>
        <div class="col-md-10">
            <input type="date" id="birthDate" name="birthDate" required="Yes" class="form-control" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProfileFileName, htmlAttributes: new { @class = "control-label col-md-5 mt-3" })
        <div class="col-md-10">
            <img src="" class="d-none border border-secondary imagePreview my-1" style="height: 150px">
            <input type="file" class="form-control mb-3" id="profile" name="UploadedProfileFileName" accept="image/*" required />
            @Html.ValidationMessageFor(model => model.ProfileFileName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Sign up" class="btn btn-lg btn-success" />
        </div>
        <div class="sign-up mt-3">
            <a style="text-align:center;" class="nav-link" href=" /Account/Login">Back to Log-in </a>
        </div>
    </div>
</div>
}

@section scripts {
    <script type="text/javascript">

        //confirm password
        var check = function () {
            if (document.getElementById('Password').value ==
                document.getElementById('confirm_password').value) {
                document.getElementById('message').style.color = 'green';
                document.getElementById('message').innerHTML = 'passwords matched';
            } else {
                document.getElementById('message').style.color = 'red';
                document.getElementById('message').innerHTML = 'passwords does not match';
            }
        }

        //profile previews
        var imageInputsId = ["profile"];
        for (var i = 0; i < imageInputsId.length; i++) {
            var id = imageInputsId[i];
            var reportCardFileName = document.getElementById(id);
            reportCardFileName.onchange = evt => {
                var blah = reportCardFileName.parentElement.querySelector('.imagePreview');;
                console.log(blah);
                blah.classList.remove("d-none");
                const [file] = reportCardFileName.files
                if (file) {
                    blah.src = URL.createObjectURL(file)
                }
            }

        }

    </script>
}


